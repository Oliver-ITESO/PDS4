%%PRACTICA 4 PROCESAMIENTO DIGITAL DE SEÑALES

%%LEER ARCHIVO con el vector de la señal

cuerda = [2425	2492	2540	2563	2572	2574	2564	2548	2522	2478	2444	2386	2313	2234	2162	2089	2044	2020	2040	2070	2124	2172	2213	2235	2238	2233	2238	2254	2399	2399	2505	2652	2787	2888	2975	3021	3049	3045	3063	3042	3028	3011	2983	2935	2875	2803	2722	2655	2612	2580	2572	2574	2556	2557	2491	2455	2408	2375	2371	2402	2453	2520	2619	2708	2803	2890	2962	3017	3041	3055	3033	2999	2931	2846	2739	2628	2512	2403	2316	2242	2186	2162	2150	2163	2191	2229	2259	2292	2311	2327	2367	2433	2524	2640	2771	2889	2987	3059	3105	3115	3129	3127	3129	3129	3112	3085	3024	2939	2839	2748	2666	2600	2569	2556	2620	2544	2528	2497	2451	2417	2383	2379	2409	2449	2497	2582	2668	2760	2835	2893	2939	2971	2965	2965	2943	2895	2834	2763	2676	2574	2505	2433	2379	2344	2332	2336	2353	2357	2367	2360	2333	2309	2312	2329	2389	2467	2559	2652	2746	2811	2849	2874	2879	2875	2871	2871	2858	2846	2812	2748	2676	2592	2503	2445	2385	2360	2349	2335	2312	2277	2230	2177	2140	2131	2156	2208	2295	2396	2505	2600	2692	2756	2803	2823	2811	2789	2724	2664	2584	2514	2415	2337	2258	2172	2114	2067	2062	2086	2114	2182	2226	2269	2273	2265	2244	2240	2264	2321	2407	2522	2638	2736	2818	2875	2921	2953	2965	2973	2979	2974	2962	2919	2871	2811	2716	2652	2590	2530	2497	2490	2483	2468	2433	2373	2315	2265	2258	2250	2317	2405	2512	2628	2746	2827	2899	2943	2971	2983	2962	2927	2895	2839	2773	2692	2607	2527	2455	2405	2401	2397	2409	2436	2459	2457	2453	2441	2407	2383	2386	2425	2475	2552	2660	2767	2866	2950	3009	3061	3081	3085	3101	3100	3069	3033	2983	2919	2854	2783	2716	2659	2611	2591	2580	2578	2568	2532	2488	2437	2390	2365	2387	2417	2497	2601	2711	2811	2903	2955	3003	3015	3001	2982	2930	2877	2815	2742	2664	2584	2532	2481	2467	2459	2453	2449	2433	2429	2396	2361	2317	2273	2241	2232	2254	2319	2405	2514	2638	2756	2849	2922	2977	3009	3007	3001	2983	2946	2902];
VECTOR_SIZE = size(cuerda,2);
derivada = zeros(1,VECTOR_SIZE);
%%Calcular Autocorrelacion
vectorCorr = zeros(1,VECTOR_SIZE*2);
for z = 1 : 1:(VECTOR_SIZE*2)-1 
	virtual_index_start = VECTOR_SIZE-z;
    for c=1: 1:z
        if(virtual_index_start+c>0)
           virtual_value_c = cuerda(virtual_index_start+c); 
        else
            virtual_value_c = 0;
        end
        if(c< VECTOR_SIZE)
            virtual_value = cuerda(c);
        else
            virtual_value = 0;
        end
        vectorCorr(z) = vectorCorr(z)+virtual_value*virtual_value_c;
    end
    vectorCorr(z)=vectorCorr(z)/1000000;
end
for z = 1 : 1:(VECTOR_SIZE*2)-2
    derivada(z) = vectorCorr(z)-vectorCorr(z+1);
end
%%Lectura de frecuencia

flag_down = 0;
	tmp_index = VECTOR_SIZE-1;
	while(flag_down<3)

			if(((derivada(tmp_index)<derivada(tmp_index-1)))&&(flag_down == 0||flag_down == 2))
			
				flag_down=flag_down+1;
                if(flag_down==1)
                  index1=tmp_index;
                end
			
            elseif(((derivada(tmp_index)>derivada(tmp_index-1)))&&flag_down == 1)
			
				flag_down=flag_down+1;
			
            else

            end
		tmp_index=tmp_index-1;
      
    end

	freq = (1/(((index1+1)-tmp_index)*0.000086956));

%% Graficas
figure; plot(cuerda);
figure; plot(vectorCorr);
figure; plot(derivada);